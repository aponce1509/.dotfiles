// Place your key bindings in this file to override the defaults
[
    // Markdown extensions
    {
        "key": "ctrl+cmd+b",
        "command": "markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },

    {
        "key": "shift+alt+e",
        "command": "markdown.extension.editing.toggleCodeBlock"
    },
    {
        "key": "alt+w", // use whatever keybinding you wish
        "command": "editor.action.insertSnippet",
        "args": {
            "snippet": "[${TM_SELECTED_TEXT}]($0)"
        },
        "when": "editorHasSelection && editorLangId == markdown "
    },
    // NeoVim (deprecated)
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    // Terminal
    {
        "key": "cmd+[Semicolon]",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "cmd+shift+a",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+shift+b",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+shift+j",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "cmd+shift+n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+shift+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    // Testing

    // File Explorer
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "ctrl+e",
        "when": "filesExplorerFocus"
    },
    {
        "command": "workbench.files.action.focusFilesExplorer",
        "key": "ctrl+e",
        "when": "!filesExplorerFocus"
    },
    {
        "command": "explorer.newFile",
        "key": "a",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "command": "explorer.newFolder",
        "key": "shift+A",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "command": "renameFile",
        "key": "r",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "command": "filesExplorer.copy",
        "key": "c",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "command": "filesExplorer.paste",
        "key": "p",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "command": "deleteFile",
        "key": "d",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    // Outline
    {
        "command": "workbench.action.toggleAuxiliaryBar",
        "key": "ctrl+o"
    },
    {
        "key": "ctrl+o",
        "command": "outline.focus",
        "when": "editorTextFocus"
    },
    // Project Manager
    {
        "command": "projectManager.listGitProjects#sideBarGit",
        "key": "shift+alt+ctrl+p o"
    },
    {
        "key": "shift+alt+ctrl+p p",
        "command": "projectManager.listProjects"
    },
    {
        "key": "alt+cmd+p",
        "command": "-projectManager.listProjects"
    },
    {
        "key": "shift+alt+ctrl+p a",
        "command": "projectManager.addToFavorites"
    },
    {
        "key": "shift+alt+ctrl+p s",
        "command": "projectManager.openSettings#sideBarAny"
    },
    {
        "key": "shift+alt+ctrl+p f",
        "command": "projectManager.listFavoriteProjects#sideBarFavorites"
    },
    {
        "key": "shift+alt+ctrl+p shift+w",
        "command": "projectManager.addToWorkspace"
    },
    {
        "key": "shift+alt+ctrl+p w",
        "command": "projectManager.addToWorkspace#sideBar"
    },
    // VSCode general keys
    {
        // no me gusta mucho pero hace un apaño en general cuando en el portátil.
        "key": "cmd+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "cmd+[Backslash]",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+b",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "alt+cmd+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "shift+alt+ctrl+v tab",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    // Task runner
    {
        "key": "shift+alt+ctrl+v d",
        "command": "workbench.action.tasks.runTask",
        "args": "global-todo"
    },
    {
        "key": "shift+alt+ctrl+v shift+d",
        "command": "workbench.action.tasks.runTask",
        "args": "local-todo"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    // GIT
    {
        "key": "ctrl+shift+alt+g j",
        "command": "git.stage"
    },
    {
        "key": "ctrl+shift+alt+g a",
        "command": "git.stageAll"
    },
    {
        "key": "ctrl+shift+alt+g c",
        "command": "git.commitStaged"
    },
    {
        "key": "ctrl+shift+alt+g shift+c",
        "command": "git.commitStagedAmend"
    },
    {
        "key": "ctrl+shift+alt+g s",
        "command": "git.stashIncludeUntracked"
    },
    {
        "key": "ctrl+shift+alt+g g",
        "command": "git.stashApply"
    },
    {
        "key": "ctrl+shift+alt+g v",
        "command": "git-graph.view"
    },

    {
        "key": "ctrl+shift+alt+g f",
        "command": "git.fetch"
    },
    {
        "key": "ctrl+shift+alt+g p",
        "command": "git.pull"
    },
    {
        "key": "ctrl+shift+alt+g b",
        "command": "git.checkout"
    },
    // To sort
    {
        "key": "ctrl+shift+alt+v p",
        "command": "jupyter.createnewinteractive"
    },
    {
        "key": "ctrl+shift+alt+p r",
        "command": "projectManager.refreshGitProjects"
    },
    {
        "key": "ctrl+shift+alt+v j",
        "command": "python.execInTerminal"
    },
    {
        "key": "ctrl+shift+alt+t j",
        "command": "workbench.view.extension.test"
    }
]
